{"ast":null,"code":"import React, { useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { weekday } from \"../../common/weatherHelpers\";\nimport Weekdays from \"./Weekdays/Weekdays\";\nimport ForecastTemp from \"./ForecastTemp/ForecastTemp\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Forecast = function Forecast(_ref) {\n  var forecast = _ref.forecast,\n    currDay = _ref.currDay,\n    isOpenForestForDay = _ref.isOpenForestForDay,\n    setIsOpenForestForDay = _ref.setIsOpenForestForDay,\n    setSelectDay = _ref.setSelectDay,\n    wheatherCode = _ref.wheatherCode,\n    returnIcon = _ref.returnIcon;\n  var day1 = weekday(currDay + 1);\n  var day2 = weekday(currDay + 2);\n  var day3 = weekday(currDay + 3);\n  var day4 = weekday(currDay + 4);\n  var day5 = weekday(currDay + 5);\n  var day6 = weekday(currDay + 6);\n  var week = [day1, day2, day3, day4, day5, day6];\n  var openSelectDay = useCallback(function (i) {\n    setIsOpenForestForDay(!isOpenForestForDay);\n    setSelectDay(i);\n  }, [setIsOpenForestForDay, setSelectDay]);\n  return _jsxs(View, {\n    style: styles.wrapper,\n    children: [_jsxs(View, {\n      style: styles.wrapperWeekdays,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return openSelectDay(currDay);\n        },\n        children: _jsx(Text, {\n          style: styles.currDay,\n          children: weekday(currDay)\n        })\n      }), week.map(function (d, i) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return openSelectDay(i + 1);\n          },\n          children: _jsx(Weekdays, {\n            day: d\n          })\n        }, i);\n      })]\n    }), _jsxs(View, {\n      style: styles.wrapperForecast,\n      children: [_jsx(View, {\n        style: styles.forecastTemp,\n        children: forecast.map(function (temp, i) {\n          return _jsx(ForecastTemp, {\n            temp: temp\n          }, i);\n        })\n      }), _jsx(View, {\n        style: styles.forecastIcon,\n        children: wheatherCode.map(function (p, i) {\n          return _jsxs(View, {\n            style: styles.wrapperIcon,\n            children: [returnIcon(p), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return openSelectDay(i);\n              },\n              children: _jsx(Text, {\n                style: styles.goToForecastForDay,\n                children: \"\\u1433\"\n              })\n            })]\n          }, i);\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    width: '100%',\n    height: '100%',\n    flexDirection: 'row'\n  },\n  wrapperWeekdays: {\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'flex-start',\n    width: 140\n  },\n  currDay: {\n    fontSize: 22,\n    fontWeight: '700',\n    color: 'white',\n    letterSpacing: 0.3\n  },\n  wrapperForecast: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '60%',\n    paddingRight: 7\n  },\n  forecastTemp: {\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'flex-start'\n  },\n  forecastIcon: {\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'flex-start'\n  },\n  wrapperIcon: {\n    flexDirection: 'row'\n  },\n  goToForecastForDay: {\n    fontSize: 21,\n    color: 'white',\n    marginRight: 10\n  }\n});\nexport default Forecast;","map":{"version":3,"names":["React","useCallback","StyleSheet","Text","TouchableOpacity","View","weekday","Weekdays","ForecastTemp","jsx","_jsx","jsxs","_jsxs","Forecast","_ref","forecast","currDay","isOpenForestForDay","setIsOpenForestForDay","setSelectDay","wheatherCode","returnIcon","day1","day2","day3","day4","day5","day6","week","openSelectDay","i","style","styles","wrapper","children","wrapperWeekdays","onPress","map","d","day","wrapperForecast","forecastTemp","temp","forecastIcon","p","wrapperIcon","goToForecastForDay","create","width","height","flexDirection","justifyContent","alignItems","fontSize","fontWeight","color","letterSpacing","paddingRight","marginRight"],"sources":["C:/Users/79787/Desktop/Web Poject/React-Native Apps/Weather app/weather/components/Forecast/Forecast.tsx"],"sourcesContent":["import React, { FC, useCallback } from 'react'\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport { weekday } from '../../common/weatherHelpers'\r\nimport { ForecastStylesTypes, ForecastType } from './ForecastTypes'\r\nimport Weekdays from './Weekdays/Weekdays'\r\nimport ForecastTemp from './ForecastTemp/ForecastTemp'\r\n\r\nconst Forecast: FC<ForecastType> = ({ forecast, currDay, isOpenForestForDay, setIsOpenForestForDay,\r\n    setSelectDay, wheatherCode, returnIcon }) => {\r\n\r\n    const day1: number = weekday(currDay + 1)\r\n    const day2: number = weekday(currDay + 2)\r\n    const day3: number = weekday(currDay + 3)\r\n    const day4: number = weekday(currDay + 4)\r\n    const day5: number = weekday(currDay + 5)\r\n    const day6: number = weekday(currDay + 6)\r\n\r\n    const week: number[] = [day1, day2, day3, day4, day5, day6]\r\n\r\n    const openSelectDay = useCallback((i: number) => {\r\n        setIsOpenForestForDay(!isOpenForestForDay)\r\n        setSelectDay(i)\r\n    }, [setIsOpenForestForDay, setSelectDay])\r\n\r\n    return (\r\n        <View style={styles.wrapper}>\r\n            <View style={styles.wrapperWeekdays}>\r\n                <TouchableOpacity onPress={() => openSelectDay(currDay)}>\r\n                    <Text style={styles.currDay}>{weekday(currDay)}</Text>\r\n                </TouchableOpacity>\r\n                {week.map((d, i) => (\r\n                    <TouchableOpacity key={i} onPress={() => openSelectDay(i + 1)}>\r\n                        <Weekdays day={d} />\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n            <View style={styles.wrapperForecast}>\r\n                <View style={styles.forecastTemp}>\r\n                    {forecast.map((temp, i) => (\r\n                        <ForecastTemp temp={temp} key={i} />\r\n                    ))}\r\n                </View>\r\n                <View style={styles.forecastIcon}>\r\n                    {wheatherCode.map((p, i) => (\r\n                        <View key={i} style={styles.wrapperIcon}>\r\n                            {returnIcon(p)}\r\n                            <TouchableOpacity onPress={() => openSelectDay(i)}>\r\n                                <Text style={styles.goToForecastForDay}>·ê≥</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    ))}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles: ForecastStylesTypes = StyleSheet.create({\r\n    wrapper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        flexDirection: 'row'\r\n    },\r\n    wrapperWeekdays: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'flex-start',\r\n        width: 140\r\n    },\r\n    currDay: {\r\n        fontSize: 22,\r\n        fontWeight: '700',\r\n        color: 'white',\r\n        letterSpacing: 0.3\r\n    },\r\n    wrapperForecast: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        width: '60%',\r\n        paddingRight: 7\r\n    },\r\n    forecastTemp: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'flex-start'\r\n    },\r\n    forecastIcon: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'flex-start'\r\n    },\r\n    wrapperIcon: {\r\n        flexDirection: 'row',\r\n    },\r\n    goToForecastForDay: {\r\n        fontSize: 21,\r\n        color: 'white',\r\n        marginRight: 10\r\n    }\r\n})\r\n\r\nexport default Forecast"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}